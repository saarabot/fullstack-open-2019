{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","catch","e","console","log","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","value","onChange","target","type","style","color","fontStyle","fontSize","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.06dbe52c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important ? 'make not important' : 'make important';\n    return (\n        <li className=\"note\">{note.content}<button onClick={toggleImportance}>{label}</button></li>\n    )\n}\n\nexport default Note;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if(message === null) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import axios from 'axios';\r\n//const baseUrl = 'http://localhost:3001/notes';\r\n//const baseUrl = 'https://salty-shore-81914.herokuapp.com/notes'\r\n//backend and frontend at the same address\r\nconst baseUrl = '/api/notes'; \r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data);\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update\r\n}","import React, {useState, useEffect} from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes';\n\nconst App = () => {\n    const [ notes, setNotes ] = useState([]);\n    const [newNote, setNewNote] =useState('uusi muistiinpano...');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState('virhe--');\n\n    useEffect(() => {\n        noteService.getAll()\n                    .then(initialNotes => {\n                        setNotes(initialNotes);\n                    })\n                    .catch(e => {\n                        console.log(e);\n                    })\n    }, []);\n\n    const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n    const toggleImportanceOf = id => {\n        const note = notes.find(n => n.id === id);\n        const changedNote = { ...note, important: !note.important };\n        noteService.update(id, changedNote)\n                    .then(response => {\n                        setNotes(notes.map(note => note.id !== id ? note : response));\n                    })\n                    .catch(e => {\n                        console.log(e);\n                        setErrorMessage(`muistiinpano '${note.content}' poistettu palvelimelta`);\n                        setTimeout(() => {\n                            setErrorMessage(null);\n                        }, 5000);\n                    });\n    }\n\n    const rows = () => notesToShow.map(note =>\n        <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n        />\n    );\n\n    const addNote = (event) => {\n        event.preventDefault();\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n            id: notes.length +1,\n        };\n\n        noteService.create(noteObject)\n                    .then(response => {\n                        setNotes(notes.concat(response));\n                        setNewNote('');\n                    })\n                    .catch(e => {\n                        console.log(e);\n                    });\n\n    }\n\n    const handleNoteChange = (event) => {\n        setNewNote(event.target.value);\n    }\n\n    const Footer = () => {\n        const footerStyle = {\n            color: 'green',\n            fontStyle: 'italic',\n            fontSize: 16\n        };\n\n        return (\n            <div style={footerStyle}>\n                <br/>\n                <em>Note app</em>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <h1>Muistiinpanot</h1>\n            <Notification message={errorMessage} />\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>n채yt채 {showAll ? 'vain t채rke채t' : 'kaikki'}</button>\n            </div>\n            <ul>{rows()}</ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange}/>\n                <button type=\"submit\">Tallenna</button>\n            </form>\n            <Footer />\n        </div>\n    )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}