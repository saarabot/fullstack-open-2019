{"version":3,"sources":["components/Filter.js","components/NewContact.js","components/Contact.js","components/Contacts.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","_ref","filter","handleFilterChange","react_default","a","createElement","value","onChange","NewContact","addNewContact","newName","newNumber","handleNameChange","handleNumberChange","Fragment","onSubmit","type","Contact","name","number","Contacts","contacts","confirmDelete","length","map","c","key","id","components_Contact","onClick","filtered","contact","toLowerCase","includes","Notification","message","style","color","padding","border","marginBottom","baseUrl","services_persons","axios","get","then","response","data","newObject","post","put","concat","delete","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","setMessage","_useState11","_useState12","notificationType","setNotificationType","useEffect","personService","initialPersons","catch","e","console","log","setTimeout","components_Notification","components_Filter","event","target","components_NewContact","preventDefault","found","person","window","confirm","newData","objectSpread","p","components_Contacts","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fe7f5461.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({filter, handleFilterChange}) => {\n    return(\n        <div >\n            Rajaa näytettäviä\n            <input value={filter} onChange={handleFilterChange}/>\n        </div>\n    )\n}\n\nexport default Filter;","import React from 'react';\n\nconst NewContact = ({addNewContact, newName, newNumber, handleNameChange, handleNumberChange}) => {\n    return (\n        <>\n        <h3>Lisää uusi</h3>\n        <form onSubmit={addNewContact}>\n            <div>\n                Nimi: <input value={newName} onChange={handleNameChange}/>\n                <br />\n                Numero: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\" >Lisää</button>\n            </div>\n        </form>\n        </>\n    );\n}\n\nexport default NewContact;","import React from 'react';\n\nconst Contact = ({name, number}) => {\n    return (\n       <p >{name} {number}</p>\n    );\n}\nexport default Contact;","import React from 'react';\nimport Contact from './Contact';\n\nconst Contacts = ({filter, contacts, confirmDelete}) => {\n    if(filter.length === 0) {\n        return (\n            <>\n            <h3>Numerot</h3>\n            {contacts.map(c => {\n                return( \n                    <div key={c.id}>\n                        <Contact key={c.id} name={c.name} number={c.number} />\n                        <button onClick={() => confirmDelete(c.id, c.name)}>Poista</button>\n                    </div>\n                )\n            })}\n            </>\n        )\n    } else {\n        let filtered = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n        \n        return (\n            <>\n            <h3>Numerot</h3>\n            {filtered.map(c => {\n                return <Contact key={c.name} name={c.name} number={c.number} />\n            })}\n            </>\n        )\n    }\n\n}\n\nexport default Contacts; ","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => {\r\n    const errorStyle = {\r\n        color: 'red',\r\n        padding: '0px 5px',\r\n        border: '3px solid red',\r\n        marginBottom: '10px'\r\n    };\r\n\r\n    const messageStyle = {\r\n        color: 'green',\r\n        padding: '0px 5px',\r\n        border: '3px solid green',\r\n        marginBottom: '10px'\r\n    };\r\n\r\n    if(message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div style={type === 2 ? errorStyle : messageStyle}>\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n        .then((response) =>  {\r\n            return response.data;\r\n        });\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data);\r\n}\r\n\r\nconst del = id => {\r\n    return axios.delete(`${baseUrl}/${id}`).then(response => response);\r\n}\r\n\r\nexport default { getAll, create, update, del };\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport NewContact from './components/NewContact';\nimport Contacts from './components/Contacts';\nimport Notification from './components/Notification';\nimport personService from './services/persons';\n\nconst App = () => {\n\n    const [ persons, setPersons ] = useState([]);\n    const [ newName, setNewName ] = useState('');\n    const [ newNumber, setNewNumber ] = useState('');\n    const [ filter, setFilter ] = useState('');\n    const [ message, setMessage ] = useState(null);\n    const [ notificationType, setNotificationType ] = useState(null); \n    \n\n    useEffect(() => {\n        personService.getAll().then(initialPersons => {\n            setPersons(initialPersons);\n        }).catch(e => {\n            console.log(e);\n            setMessage('Tapahtui virhe');\n            setNotificationType(2);\n            setTimeout(() => {\n                setMessage(null);\n            }, 5000);\n        });\n    }, []);\n\n    const addNewContact = (event) => {\n        event.preventDefault();\n        let found = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase());\n\n        if(found.length === 0) {\n            const newContact = {\n                name: newName,\n                number: newNumber\n            };\n            personService.create(newContact).then(response => {\n                setPersons(persons.concat(response));\n                setNotificationType(1);\n                setMessage(`Lisättiin ${response.name}`);\n                setTimeout(() => {\n                    setMessage(null);\n                }, 5000);\n            }).catch(e => {\n                setMessage('Tapahtui virhe');\n                setNotificationType(2);\n                setTimeout(() => {\n                    setMessage(null);\n                }, 5000);\n            });\n            setNewName('');\n            setNewNumber('');\n        } else {\n            if(window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)){\n                const newData = {\n                    ...found[0],\n                    name: newName,\n                    number: newNumber\n                };\n                \n                personService.update(found[0].id, newData).then(response => {\n                    setMessage(`Päivitettiin ${newName}`);\n                    setNotificationType(1);\n                    setTimeout(() => {\n                        setMessage(null);\n                    }, 5000);\n                    setPersons(persons.map(p => p.id !== response.id ? p : response ));\n                    setNewName('');\n                    setNewNumber('');\n                }).catch(e => {\n                    setMessage('Tapahtui virhe');\n                    setNotificationType(2);\n                    setTimeout(() => {\n                        setMessage(null);\n                    }, 5000);\n                });;\n            }\n        }\n    }\n\n    const confirmDelete = (id, name) => {\n        if(window.confirm(`Poistetaanko ${name}?`)) {\n            personService.del(id).then(() => {\n                setMessage(`Poistettiin ${name}`);\n                setNotificationType(1);\n                setTimeout(() => {\n                    setMessage(null);\n                }, 5000);\n                personService.getAll().then(response => {\n                    setPersons(response);\n                })\n            })\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    }\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value);\n    }\n\n    return (\n        <div>\n            <h2>Puhelinluettelo</h2>\n            <Notification message={message} notificationType={notificationType}/>\n            <Filter filter={filter} handleFilterChange={handleFilterChange} />\n            <NewContact \n                addNewContact={addNewContact}\n                newName={newName} handleNameChange={handleNameChange}\n                newNumber={newNumber} handleNumberChange={handleNumberChange}\n            />\n            <Contacts filter={filter} contacts={persons} confirmDelete={confirmDelete}/>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}